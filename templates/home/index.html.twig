{% extends 'base.html.twig' %}

{% block title %}Hello HomeController!{% endblock %}

{% block body %}
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            display: flex;
            flex-direction: column;
            min-height: 100vh;
            font-family: sans-serif;

        }

        header {
            background-color: lightgreen;
            color: white;
            padding: 20px;
            text-align: center;
            font-size: 24px;
            font-weight: bold;
        }

        .map-container {
            flex: 1;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
        }

        #map {
            width: 80%;
            height: 700px;
            border-radius: 0 10px 10px 0;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
        .header-content {
            position: relative;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .title {
            font-size: 24px;
            font-weight: bold;
            color: white;
        }

        .nav-links {
            position: absolute;
            right: 20px;
            display: flex;
            gap: 15px;
        }

        .nav-links a {
            font-size: 14px;
            color: white;
            text-decoration: none;
        }
    </style>

    <header>
        <div class="header-content">
            <div class="title">Bienvenue Veliko ðŸš²</div>
            <nav class="nav-links">
                <a href="/inscription">Inscription</a>
                <a href="/connexion">Connexion</a>
                <a href="#">Contact</a>
            </nav>
        </div>
    </header>


    <div class="map-container">
        <div id="map"></div>
    </div>
    <script>
        let map = L.map('map').setView([48.8566, 2.3522], 16);
        L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>'
        }).addTo(map);

        const userIcon = L.icon({
            iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-green.png',
            shadowUrl: 'https://unpkg.com/leaflet@1.9.3/dist/images/marker-shadow.png',
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
            shadowSize: [41, 41]
        });

        try {
            map.locate({ setView: true, maxZoom: 16, enableHighAccuracy: true });

            map.on('locationfound', (e) => {
                L.marker(e.latlng, { icon: userIcon }).addTo(map).bindPopup(`
            <div>
                <p><strong>Vous Ãªtes lÃ </strong></p>
            </div>
            `)
            });

            map.on('locationerror', (e) => {
                console.error('Erreur de gÃ©olocalisation :', e.message);
            });
        } catch (error) {
            console.error('Erreur lors de la tentative de gÃ©olocalisation :', error);
        }
    </script>


    <script>
        {% if stations is not empty %}
        {% for station in stations %}
        {% set s = station.fields %}
        let marker_station{{ loop.index }} = L.marker([{{ s.coordonnees_geo[0] }}, {{ s.coordonnees_geo[1] }}]).addTo(map);
        marker_station{{ loop.index }}.bindPopup(`
        <b>{{ s.name }}</b><br>
        VÃ©los disponibles : {{ s.numbikesavailable }}<br>
        MÃ©caniques : {{ s.mechanical }}<br>
        Electriques : {{ s.ebike }}
    `);
        {% endfor %}
        {% else %}
        console.warn("Aucune station trouvÃ©e.");
        {% endif %}
    </script>

{% endblock %}
